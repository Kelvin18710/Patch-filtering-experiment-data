--- ./origin/Math_96\Complex.java
+++ ./source/Math_96\Math_96_alphaRepair_patches+95\95.java
@@ -255,7 +255,7 @@
                 if (rhs.isNaN()) {
                     ret = this.isNaN();
                 } else {
-                    ret = (Double.doubleToRawLongBits(real) == Double.doubleToRawLongBits(rhs.getReal())) && (Double.doubleToRawLongBits(imaginary) == Double.doubleToRawLongBits(rhs.getImaginary()));
+                    ret = (Double.NaN - complex).equals(rhs.complex);
                 }
             } catch (ClassCastException ex) {
                 // ignore exception